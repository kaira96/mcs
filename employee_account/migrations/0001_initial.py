# Generated by Django 4.0.6 on 2022-07-19 09:26

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
        ('company_structure', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('login', models.CharField(blank=True, max_length=125, unique=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя работника')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия работника')),
                ('middle_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Отчество работника')),
                ('img', django_resized.forms.ResizedImageField(crop=['middle', 'center'], default='avatar7.png', force_format='JPEG', keep_meta=True, quality=75, scale=None, size=[400, 350], upload_to='avatar/%Y/%m/%d', verbose_name='Фото сотрудника')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Дата рождения')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Телефон номер клиента')),
                ('email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес проживания')),
                ('registration_address', models.CharField(max_length=255, verbose_name='Адрес прописки')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужчина'), ('W', 'Женщина')], max_length=2, verbose_name='Пол')),
                ('is_married', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=True, verbose_name='Семейное положение (Женат/Замужем)')),
                ('is_criminal_record', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Есть ли судимость')),
                ('education_status', models.CharField(blank=True, choices=[('H', 'Высшее'), ('M', 'Среднее'), ('NCH', 'Не оконченное высшее'), ('NCM', 'Не оконченное cреднее')], max_length=3, verbose_name='Образование')),
                ('is_beneficiary', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Являетесь ли вы бенефициарным собственником?')),
                ('is_political_man', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Являетесь ли вы политически значимым человеком?')),
                ('status', models.CharField(choices=[('WK', 'Работает'), ('NWK', 'Не работает'), ('VC', 'Отпуск'), ('DC', 'Декрет'), ('MS', 'Командировка'), ('DS', 'Уволен'), ('SK', 'Больничный')], default='WK', max_length=4, verbose_name='Статус')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('office_branch', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='company_structure.officebranch', verbose_name='Филиал/Офис')),
                ('passport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employer', to='client.passport')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='SalaryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Зарплата сотрудника в сомах')),
                ('is_current', models.BooleanField(default=True, help_text='format: required, max_length=255', verbose_name='Актуальная зарплата?')),
                ('start_date', models.DateTimeField(auto_now_add=True, help_text='format: required', verbose_name='Дата начала выдачи этой зарплаты')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0), help_text='format: required', verbose_name='Дата окончания выдачи этой зарплаты')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='salary_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'История зарплаты',
                'verbose_name_plural': 'История зарплат',
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Зарплата сотрудника в сомах')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='salaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Зарплата',
                'verbose_name_plural': 'Зарплаты',
            },
        ),
        migrations.CreateModel(
            name='PositionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, help_text='format: required', verbose_name='Дата начала работы на этой позиции')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0), help_text='format: required', verbose_name='Дата окончания работы на этой позиции')),
                ('is_current', models.BooleanField(default=True, verbose_name='Это актуальные данные')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='positions', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_structure.position', verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Хронология должности сотрудника',
                'verbose_name_plural': 'Хронология должностей сотрудников',
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryActionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplinary_action_amount', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Дисциплинарное взыскание в %')),
                ('disciplinary_action_period', models.PositiveSmallIntegerField(help_text='В месяцах', verbose_name='Срок дисциплинарного взыскания')),
                ('is_active', models.BooleanField(verbose_name='Дисциплинарное взыскание есть')),
                ('end_date', models.DateField(verbose_name='Дата окончания взыскания')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='disciplinary_action_histories', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'История дисциплинарного взыскания',
                'verbose_name_plural': 'История дисциплинарных взысканий',
            },
        ),
        migrations.CreateModel(
            name='BonusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_amount', models.PositiveIntegerField(verbose_name='Размер бонуса за одно финансирования')),
                ('min_credit_quantity', models.PositiveSmallIntegerField(verbose_name='Минимальное кол-ва финансирования')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('start_date', models.DateTimeField(verbose_name='Дата началы действия размера бонуса')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0), verbose_name='Дата конца действия размера бонуса')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bonus_histories', to='company_structure.position', verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'История бонуса',
                'verbose_name_plural': 'История бонусов',
            },
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_amount', models.PositiveIntegerField(verbose_name='Размер бонуса за одно финансирования')),
                ('min_credit_quantity', models.PositiveSmallIntegerField(verbose_name='Минимальное кол-ва финансирования')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('position', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='bonus', to='company_structure.position', verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Бонус',
                'verbose_name_plural': 'Бонусы',
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplinary_action_amount', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Дисциплинарное взыскание в %')),
                ('disciplinary_action_period', models.PositiveSmallIntegerField(help_text='В месяцах', verbose_name='Срок дисциплинарного взыскания')),
                ('is_active', models.BooleanField(default=False, verbose_name='Дисциплинарное взыскание есть')),
                ('end_date', models.DateField(blank=True, verbose_name='Дата окончания взыскания')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='disciplinary_action', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Дисциплинарное взыскание',
                'verbose_name_plural': 'Дисциплинарные взыскания',
                'unique_together': {('employee_id', 'is_active')},
            },
        ),
    ]
