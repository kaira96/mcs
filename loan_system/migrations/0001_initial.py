# Generated by Django 4.0.6 on 2022-07-19 09:26

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_amount', models.DecimalField(decimal_places=2, help_text='Coм', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма финансирования')),
                ('funding_period', models.PositiveSmallIntegerField(help_text='В месяцах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Срок финансирования')),
                ('first_instalment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Первый взнос')),
                ('bank_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, verbose_name='Сумма наценки банка')),
                ('total_cost_with_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая сумма с наценкой')),
                ('monthly_payment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ежемесячный платеж')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Дата выдачи кредита')),
                ('end_date', models.DateField(verbose_name='Дата окончания кредита')),
                ('acceptance_status', models.CharField(choices=[('bail', 'Выдача с залогом '), ('collateral', 'Выдача без залога'), ('rejection', 'Сформировать отказ'), ('review', 'В стадии рассмотрения')], default='review', max_length=20, verbose_name='Статус принятия')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.client', verbose_name='Клиент')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loans', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник, который заполнил')),
            ],
            options={
                'verbose_name': 'Заявка на кредит',
                'verbose_name_plural': 'Заявка на кредиты',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('percent', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0))),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
            ],
            options={
                'verbose_name': 'Кредитный продукт',
                'verbose_name_plural': 'Кредитные продукты',
            },
        ),
        migrations.CreateModel(
            name='SocialAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_relevance', models.CharField(choices=[('H', 'Высоко востребованная'), ('M', 'Средне востребованная'), ('L', 'Низко востребованная'), ('N', 'Не востребованная')], default='M', max_length=1, verbose_name='Востребованность профессии')),
                ('is_match', models.BooleanField(default=True, verbose_name='Слова соответсвуют с информацией по КИБу')),
                ('client_loans_history', models.CharField(choices=[('P', 'Положительная'), ('N', 'Негативная')], default='P', max_length=20, verbose_name='Кредитная история клиента')),
                ('own_house_address', models.CharField(max_length=50, verbose_name='Собственное жилье клиента распологается')),
                ('has_a_car', models.BooleanField(default=True, verbose_name='Есть автомобиль у клиента')),
                ('сlient_behavior', models.CharField(choices=[('P', 'Вежливое'), ('N', 'Нейтральное'), ('R', 'Грубое')], default='P', max_length=1, verbose_name='Поведение клиента во время анкетирования было')),
                ('is_swear', models.BooleanField(default=False, verbose_name='Клиент использует ненормативную лексику')),
                ('is_sharia_type_of_activity', models.BooleanField(default=True, verbose_name='Вид деятельности соответсвует шариату')),
                ('is_positive', models.BooleanField(default=False, verbose_name='Социальный анализ положителен')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='social_analysis', to='client.client', verbose_name='Клиент')),
                ('loan_application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='social_analysis', to='loan_system.loanapplication', verbose_name='Кредит')),
            ],
            options={
                'verbose_name': 'Социальный анализ',
                'verbose_name_plural': 'Социальные анализы',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название документа')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0))),
                ('document', models.FileField(upload_to='documents/%Y/%m/%d', verbose_name='Загрузите файл формата doc or docx')),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('loan_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='loan_system.loanproduct', verbose_name='Кредитный продукт')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='LoanConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_amount', models.DecimalField(decimal_places=2, help_text='Coм', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма финансирования')),
                ('funding_period', models.PositiveSmallIntegerField(help_text='В месяцах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Срок финансирования')),
                ('first_instalment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Первый взнос')),
                ('monthly_payment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ежемесячный платеж')),
                ('bank_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, verbose_name='Сумма наценки банка')),
                ('total_cost_with_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая сумма с наценкой')),
                ('is_re_financing', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Повторное финансирование')),
                ('is_employer', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Сотрудник нашего банка')),
                ('is_gurantor', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=True, verbose_name='Есть поручитель')),
                ('start_date', models.DateField(verbose_name='Дата выдачи кредита')),
                ('end_date', models.DateField(verbose_name='Дата окончания кредита')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loan_consultation', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник, который заполнил')),
                ('loan_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loan_system.loanproduct', verbose_name='Кредитный продукт')),
            ],
            options={
                'verbose_name': 'Консультация на кредит',
                'verbose_name_plural': 'Консультация на кредиты',
                'ordering': ('-created_date',),
            },
        ),
        migrations.AddField(
            model_name='loanapplication',
            name='loan_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loan_system.loanproduct', verbose_name='Кредитный продукт'),
        ),
    ]
