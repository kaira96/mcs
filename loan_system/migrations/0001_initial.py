# Generated by Django 4.0.6 on 2022-08-04 09:41

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('deposits', '0001_initial'),
        ('accounting_balance', '0001_initial'),
        ('company_structure', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoanApllicationConfirmEmployees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='loan_application_confirm_employee', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник ответственный за акцепт выдачи кредита')),
            ],
            options={
                'verbose_name': 'Сотрудник ответственный за акцепт выдачи кредита',
                'verbose_name_plural': 'Сотрудники ответственные за акцепт выдачи кредита',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_amount', models.DecimalField(decimal_places=2, help_text='Coм', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма финансирования')),
                ('funding_period', models.PositiveSmallIntegerField(help_text='В месяцах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Срок финансирования')),
                ('first_instalment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Первый взнос')),
                ('bank_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, verbose_name='Сумма наценки банка')),
                ('total_cost_with_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая сумма с наценкой')),
                ('monthly_payment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ежемесячный платеж')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Дата выдачи кредита')),
                ('end_date', models.DateField(verbose_name='Дата окончания кредита')),
                ('is_accept', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Решение кредитного комитета (Выдать кредит)')),
                ('is_processing', models.BooleanField(choices=[(True, 'Рассмотренно'), (False, 'В стадии рассмотрения')], default=False, verbose_name='Статус обработки')),
                ('is_registered', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Кредит оформлен')),
                ('give_out_status', models.CharField(choices=[('bail', 'Выдача с залогом '), ('rejection', 'Сформировать отказ'), ('not_accept', 'Решение не принято')], default='not_accept', max_length=20, verbose_name='Решение сотрудника')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_structure.officebranch', verbose_name='Филиал')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='client.client', verbose_name='Клиент')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='my_loan_applications', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Заявка на кредит',
                'verbose_name_plural': 'Заявка на кредиты',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('percent', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='% ставка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0), verbose_name='Дата конца')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
            ],
            options={
                'verbose_name': 'Кредитный продукт',
                'verbose_name_plural': 'Кредитные продукты',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='TundukAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('loan_application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='tunduk_analysis', to='loan_system.loanapplication', verbose_name='Заявка на кредит')),
            ],
            options={
                'verbose_name': 'Тундук',
                'verbose_name_plural': 'Тундук',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='SocialAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_relevance', models.CharField(choices=[('H', 'Высоко востребованная'), ('M', 'Средне востребованная'), ('L', 'Низко востребованная'), ('N', 'Не востребованная')], default='M', max_length=1, verbose_name='Востребованность профессии')),
                ('is_match', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=True, verbose_name='Слова соответсвуют с информацией по КИБу')),
                ('client_loans_history', models.CharField(choices=[('P', 'Положительная'), ('N', 'Негативная')], default='P', max_length=20, verbose_name='Кредитная история клиента')),
                ('own_house_address', models.CharField(max_length=50, verbose_name='Собственное жилье клиента распологается')),
                ('has_a_car', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Есть автомобиль у клиента')),
                ('сlient_behavior', models.CharField(choices=[('P', 'Вежливое'), ('N', 'Нейтральное'), ('R', 'Грубое')], default='P', max_length=1, verbose_name='Поведение клиента во время анкетирования было')),
                ('is_swear', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Клиент использует ненормативную лексику')),
                ('is_sharia_type_of_activity', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Вид деятельности соответсвует шариату')),
                ('is_positive', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Социальный анализ положителен')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('loan_application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='social_analysis', to='loan_system.loanapplication', verbose_name='Заявка на кредит')),
            ],
            options={
                'verbose_name': 'Социальный анализ',
                'verbose_name_plural': 'Социальные анализы',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название документа')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 12, 31, 12, 0))),
                ('document', models.FileField(upload_to='documents/%Y/%m/%d', verbose_name='Загрузите файл формата doc or docx')),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('loan_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='loan_system.loanproduct', verbose_name='Кредитный продукт')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_amount', models.DecimalField(decimal_places=2, help_text='Coм', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма финансирования')),
                ('funding_period', models.PositiveSmallIntegerField(help_text='В месяцах', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Срок финансирования')),
                ('first_instalment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Первый взнос')),
                ('monthly_payment', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ежемесячный платеж')),
                ('bank_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, verbose_name='Сумма наценки банка')),
                ('total_cost_with_surcharge', models.DecimalField(decimal_places=2, help_text='Сом', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Общая сумма с наценкой')),
                ('is_re_financing', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Повторное финансирование')),
                ('is_employer', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=False, verbose_name='Сотрудник нашего банка')),
                ('is_gurantor', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], default=True, verbose_name='Есть поручитель')),
                ('start_date', models.DateField(verbose_name='Дата выдачи кредита')),
                ('end_date', models.DateField(verbose_name='Дата окончания кредита')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='my_loan_consultations', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('loan_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loan_system.loanproduct', verbose_name='Кредитный продукт')),
            ],
            options={
                'verbose_name': 'Консультация на кредит',
                'verbose_name_plural': 'Консультация на кредиты',
                'ordering': ('-created_date',),
            },
        ),
        migrations.AddField(
            model_name='loanapplication',
            name='loan_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loan_system.loanproduct', verbose_name='Кредитный продукт'),
        ),
        migrations.CreateModel(
            name='KIBAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('loan_application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='kib_analysis', to='loan_system.loanapplication', verbose_name='Заявка на кредит')),
            ],
            options={
                'verbose_name': 'КИБ',
                'verbose_name_plural': 'КИБ',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='LoanApplicationConfirmHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_confirm', models.BooleanField(choices=[(True, 'Да'), (False, 'Нет')], verbose_name='Выдать кредит')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loan_application_confirm_employee', to='loan_system.loanapllicationconfirmemployees', verbose_name='Сотрудник ответственный за акцепт выдачи кредита')),
                ('loan_application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loan_application_confirm', to='loan_system.loanapplication', verbose_name='Заявка на кредит')),
            ],
            options={
                'verbose_name': 'Акцепт на кредитную заявку',
                'verbose_name_plural': 'Акцепты на кредитные заявки',
                'ordering': ('-created_date',),
                'unique_together': {('loan_application', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.PositiveSmallIntegerField(default=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Классификация кредита')),
                ('classification_percent', models.DecimalField(decimal_places=1, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Классификация кредита в %')),
                ('urgent_principal_debt', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='срочный основной долг')),
                ('overdue_principal_debt', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='просроченный основной долг')),
                ('overdue_days_quantity', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во просроченных дней')),
                ('total_overdue_days_quantity', models.PositiveSmallIntegerField(default=0, verbose_name='Итого кол-во просроченных дней')),
                ('is_overdue', models.BooleanField(default=False, verbose_name='просрочено')),
                ('accrual_status', models.CharField(choices=[('A', 'Начисления'), ('NA', 'Не начисления'), ('J', 'Судебный')], default='A', max_length=20, verbose_name='статус начисления')),
                ('accrual_status_date', models.DateField(verbose_name='Дата статуса')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
                ('balance_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='balance_accounts', to='accounting_balance.account', verbose_name='Балансовый счёт')),
                ('deposit_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deposit_account', to='deposits.deposit', verbose_name='Депозитный счёт')),
                ('loan_application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='loan', to='loan_system.loanapplication', verbose_name='Заявка на кредит')),
            ],
            options={
                'verbose_name': 'Кредит',
                'verbose_name_plural': 'Кредиты',
                'ordering': ('-created_date',),
                'unique_together': {('loan_application', 'deposit_account')},
            },
        ),
    ]
